name: Build

on:
  push:
    branches:
      - master
  workflow_dispatch: {}

jobs:
  publish_server_build_image:
    runs-on: ubuntu-latest
    steps :
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Publish server build image
        uses: ./.github/actions/publish-build-image
        with: 
          image-tag: aria-server-build
          file-path: ./src/backend/Dockerfile.build
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          auth-token: ${{ secrets.DOCKER_HUB_AUTH_TOKEN }}
          repo: ${{ vars.DOCKER_IMAGE_REPO}}
  
  publish_client_build_image:
    runs-on: ubuntu-latest
    steps :
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Publish client build image
        uses: ./.github/actions/publish-build-image
        with: 
          image-tag: aria-client-build
          file-path: ./src/client/Dockerfile.build
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          auth-token: ${{ secrets.DOCKER_HUB_AUTH_TOKEN }}
          repo: ${{ vars.DOCKER_IMAGE_REPO}}

  build_server:
    needs: [publish_server_build_image]
    if: always()
    runs-on: ubuntu-latest
    container:
      image: ${{ needs.publish_server_build_image.outputs.published-image }}
      credentials:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_AUTH_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build
        run: bash ./src/backend/build.sh         
  
  build_client:
    needs: [publish_client_build_image,  build_server]
    if: always()
    runs-on: ubuntu-latest
    container:
      image: ${{ needs.publish_client_build_image.outputs.published-image }}
      credentials:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_AUTH_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Cache items in the node modules folder, update cache if the packages lock file changes
      # This means that if the lock file does not change, then we will copy the cached node modules folder
      - name: Cache node modules
        id: node-module-cache
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ./src/client/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('./pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list
        working-directory: ./src/client

      - name: Build
        run: bash ./src/client/build.sh

